name: Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    name: Ruby ${{ matrix.ruby }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        ruby: ['3.1', '3.2', '3.3', '3.4']
        experimental: [false]
        include:
          # Test on Windows with each Ruby version
          - os: windows-latest
            ruby: '3.1'
            experimental: true
          - os: windows-latest
            ruby: '3.2'
            experimental: true
          - os: windows-latest
            ruby: '3.3'
            experimental: true
          - os: windows-latest
            ruby: '3.4'
            experimental: true
          # Test with Ruby head on Ubuntu
          - os: ubuntu-latest
            ruby: 'head'
            experimental: true

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true # runs 'bundle install' and caches installed gems
    
    - name: Run tests
      run: bundle exec rspec --format documentation
      continue-on-error: ${{ matrix.experimental }}

  coverage:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.4'
        bundler-cache: true
    
    - name: Run tests with coverage
      run: |
        bundle exec rspec --format documentation
    
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage/
      if: always()